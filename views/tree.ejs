<% include header %>
    <!--
    <h1><%-title %></h1>
-->
    <div class="container">
        <h1> Tree View of Concepts</h1>
        <!--
        <div class="row">
-->
        <hr>
        <div class="col-sm-8">
            <div class="row">

                <div class="dropdown">
                    <span class="pull-right">

                    <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">Filter by File
                        <span class="caret"></span></button>
                    <ul class="dropdown-menu">
                        <li>
                            <a href="#">
                                    ALL files
                                </a>
                        </li>
                        <%fileNames.forEach(function (item) {%>
                            <li>
                                <a href="#">
                                    <%= item %>
                                </a>
                            </li>
                            <%});%>


                    </ul>
                    <br />
                    </span>

                </div>
            </div>

            <br/>
            <div class="row">
                <span class="pull-right">

                        <label >
                            <input type="checkbox" class="form-check-input" id="chk-ignore-case" value="false"> Ignore Case
                        </label >
                        <label >
                            <input type="checkbox" class="form-check-input" id="chk-exact-match" value="false"> Exact Match
                        </label>

                                                                  </span>

            </div>

            <!-- <form> -->
            <div class="form-group">
                <label for="input-search" class="sr-only">Search Tree:</label>
                <input type="input" class="form-control" id="input-search" placeholder="Type to search..." value="">
            </div>

            <div class="row">

                <label class="col-sm-3" class="radio inline">
                    <input type="radio" value="1" /> View with Classes
                </label>
                <label class="col-sm-3" class="radio inline">
                    <input type="radio" value="2" /> View with Soks
                </label>

            </div>


            <div>
                <span class="pull-right">
                <button type="button" class="btn btn-success" id="btn-search">Search</button>
                <button type="button" class="btn btn-default" id="btn-clear-search">Clear</button>
     </span>
            </div>
            <br/>
            <br/>
            <br/>
            <div>

                <h2>Results</h2>
                <div id="search-output"></div>
                <!-- </form> -->
                <div id="tree"></div>
            </div>


        </div>

        <div id="infoDetails" class="col-sm-4">


        </div>


    </div>
    <!--        <div class="row">-->
    <!--<hr>
        <h2>Data</h2>
        <div class="col-sm-4">
            <h2>JSON Data</h2>
            <div id="treeview12" class=""></div>
        </div>
        <div class="col-sm-4">
            <h2></h2>
            <div id="treeview13" class=""></div>
        </div>
        <div class="col-sm-4">
            <h2></h2>
            <div id="treeview14"></div>
        </div>-->
    <!--
</div>-->
    <br/>
    <br/>
    <br/>
    <br/>

    <% include footer %>
        <script>
            function getUniqueParents(data) {
                var unique = [...new Set(data.map(item => item.parent))];

                return unique;
            }

            function getParentWithChildren(data, parent) {


                var children = [];
                for (var i = 0; i < data.length; i++) {
                    if (data[i].parent === parent)
                        children.push(data[i]);
                };

                var node = {
                    text: parent,
                    nodes: children
                };

                return node;
            }

            function getTreeData(propertyName, propertyValue) {
                if (propertyValue)
                    propertyValue = propertyValue.trim();

                var viewData = <%- JSON.stringify(data) %>; //TODO: get this data with AJAX request.
                for (var i = 0; i < viewData.length; i++) {
                    viewData[i].text = viewData[i].concept;
                }
                var allParents = getUniqueParents(viewData);
                var data = [];
                var j = 0;
                for (var i = 0; i < allParents.length; i++) {
                    if (allParents[i])
                        data[j++] = getParentWithChildren(viewData, allParents[i]);
                }

                for (var i = 0; i < viewData.length; i++) {
                    data[j++] = viewData[i];
                }

                if (propertyName && propertyValue) {
                    var filteredData = [];
                    var k = 0;
                    for (var i = 0; i < data.length; i++) {
                        if (data[i][propertyName])
                            if (data[i][propertyName].trim() === propertyValue) {
                                filteredData[k] = data[i];
                                k++;
                            }
                    }
                    data = filteredData;
                }

                return data;
            }

            $('#tree').treeview({
                data: getTreeData(), // data is not optional
                levels: 5
            });


            var search = function(e) {
                var pattern = $('#input-search').val();
                var options = {
                    ignoreCase: $('#chk-ignore-case').is(':checked'),
                    exactMatch: $('#chk-exact-match').is(':checked'),
                    revealResults: $('#chk-reveal-results').is(':checked')
                };
                var results = $('#tree').treeview('search', [pattern, options]);

                var output = '<p>' + results.length + ' matches found</p>';
                $.each(results, function(index, result) {
                    output += '<p>- ' + result.text + '</p>';
                });
                $('#search-output').html(output);
            }

            $('#btn-search').on('click', search);
            $('#input-search').on('keyup', search);

            $('#btn-clear-search').on('click', function(e) {
                $searchableTree.treeview('clearSearch');
                $('#input-search').val('');
                $('#search-output').html('');
            });


            function selectItem(item) {

                alert(item.label + " " + item.concept);
            }

            $('.dropdown-menu').on('click', 'a', function(e) {
                // 'this' is the clicked anchor
                var text = this.text;
                if (text)
                    text = text.trim();

                if (text === "ALL files") {
                    $('#tree').treeview({
                        data: getTreeData(), // data is not optional
                        levels: 5
                    });
                } else {
                    $('#tree').treeview({
                        data: getTreeData('fileName', text), // data is not optional
                        levels: 5
                    });
                }



                // here add to local storage;

            });

        </script>
